/*
 * Copyright (C) 2020, HENSOLDT Cyber GmbH
 */

/**
 * @file
 * @brief Assembly file of the CAmkES application.
 */
import <std_connector.camkes>;
import <global-connectors.camkes>;
/** @cond SKIP_IMPORTS */
import "components/hello_world_app/hello_world_app.camkes";
import "components/hello_world_sender/hello_world_sender.camkes";
/** @endcond */

connector trentos_thread {
    from Procedures with 0 threads;
    to Procedure;
    attribute int id = 3;
}

assembly {
    composition {

        component hello_world_sender  sender;

        component hello_world_app  main;

        connection  trentos_thread \
            test1 ( \
                from   main.thread1_1, \
                to     main.thread1 \
            );

        connection  trentos_thread \
            test2 ( \
                from   main.thread2_1, \
                to     main.thread2 \
            );

        connection  trentos_thread \
            test3 ( \
                from   main.thread3_1, \
                to     main.thread3 \
            );

        connection  trentos_thread \
            test4 ( \
                from   main.thread4_1, \
                to     main.thread4 \
            );

        connection seL4Notification thread_join_conn( \
            from main.thread_join_e, \
            to   main.thread_join_c);

        connection seL4Notification thread_start_conn( \
            from main.thread_start_e, \
            to   main.thread_start_c);

        connection seL4Notification thread_started_conn( \
            from main.thread_started_e, \
            to   main.thread_started_c);

        connection seL4MessageQueue msgqueue(\
            from sender.event_out, \
            to   main.event_in);
    }

    configuration {
        main.threads_available_value = 0;
        main.threads_join_value = 0;

        sender.event_out_id = 1;
        main.event_in_id = 1;

//  static_assert(sizeof(Msg) * 128 + sizeof(vq_vring_avail_t)
// + sizeof(uint16_t) * 256 + sizeof(vq_vring_used_t)
// + sizeof(struct vq_vring_used_elem) * 256
// + sizeof(vq_vring_desc_t) * 256 <= sizeof(from_0_event_out_data),

        msgqueue.size = 4096*2;
        msgqueue.length = 64;
    }

}

